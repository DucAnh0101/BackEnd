// <auto-generated />
using System;
using BusinessObject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusiniessObject.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.GammaCalibration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Coefficient")
                        .HasColumnType("float");

                    b.Property<int>("GammaDeviceId")
                        .HasColumnType("int");

                    b.Property<double>("RangeValue")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GammaDeviceId");

                    b.ToTable("GammaCalibrations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Coefficient = 1.5,
                            GammaDeviceId = 1,
                            RangeValue = 0.10000000000000001,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 2,
                            Coefficient = 2.5,
                            GammaDeviceId = 1,
                            RangeValue = 0.20000000000000001,
                            Status = "Active"
                        },
                        new
                        {
                            Id = 3,
                            Coefficient = 3.5,
                            GammaDeviceId = 2,
                            RangeValue = 0.29999999999999999,
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.PhoGammaDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("K")
                        .HasColumnType("float");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Th")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<double?>("U")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PhoGammaDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            K = 10.5,
                            SerialNumber = "PHO-001",
                            Status = "Active",
                            Th = 14.199999999999999,
                            Type = 1,
                            U = 12.300000000000001
                        },
                        new
                        {
                            Id = 2,
                            K = 11.5,
                            SerialNumber = "PHO-002",
                            Status = "Active",
                            Th = 15.199999999999999,
                            Type = 1,
                            U = 13.300000000000001
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("answer_text");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("group_id");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("questionWriting");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83F197C22A5");

                    b.HasIndex("GroupId");

                    b.ToTable("question", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "Hanoi",
                            GroupId = 1,
                            QuestionText = "What is the capital city of Vietnam?"
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "To measure gamma radiation levels",
                            GroupId = 2,
                            QuestionText = "What is the primary function of a gamma spectrometer?"
                        },
                        new
                        {
                            Id = 3,
                            AnswerText = "Wear appropriate protective gear",
                            GroupId = 3,
                            QuestionText = "What is the first step in radiation safety protocol?"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.QuestionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__question__3213E83F4DFF750F");

                    b.ToTable("question_group", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "General Knowledge"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Technical Questions"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Safety Procedures"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvtUrl")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("CitizenId")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateOnly>("DOB")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CitizenId")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AvtUrl = "https://example.com/avatar1.jpg",
                            CitizenId = "040203007094",
                            DOB = new DateOnly(2003, 1, 1),
                            Email = "bda2k3@gmail.com",
                            IsDelete = false,
                            IsMale = true,
                            Password = "01012003",
                            PhoneNumber = "0899070745",
                            RoleId = 1,
                            UserName = "DucAnh"
                        },
                        new
                        {
                            Id = 2,
                            AvtUrl = "https://example.com/avatar2.jpg",
                            CitizenId = "987654321098",
                            DOB = new DateOnly(1995, 8, 22),
                            Email = "tranthib@gmail.com",
                            IsDelete = true,
                            IsMale = false,
                            Password = "12345678",
                            PhoneNumber = "0912345678",
                            RoleId = 2,
                            UserName = "TranThiB"
                        },
                        new
                        {
                            Id = 3,
                            AvtUrl = "https://example.com/avatar3.jpg",
                            CitizenId = "456789123456",
                            DOB = new DateOnly(1988, 3, 10),
                            Email = "levanc@gmail.com",
                            IsDelete = false,
                            IsMale = true,
                            Password = "12345678",
                            PhoneNumber = "0923456789",
                            RoleId = 1,
                            UserName = "LeVanC"
                        },
                        new
                        {
                            Id = 4,
                            AvtUrl = "https://example.com/avatar4.jpg",
                            CitizenId = "789123456789",
                            DOB = new DateOnly(1992, 11, 30),
                            Email = "phamthid@gmail.com",
                            IsDelete = true,
                            IsMale = false,
                            Password = "12345678",
                            PhoneNumber = "0934567890",
                            RoleId = 3,
                            UserName = "PhamThiD"
                        },
                        new
                        {
                            Id = 5,
                            AvtUrl = "https://example.com/avatar5.jpg",
                            CitizenId = "321654987123",
                            DOB = new DateOnly(1993, 7, 25),
                            Email = "hoangvane@gmail.com",
                            IsDelete = false,
                            IsMale = true,
                            Password = "12345678",
                            PhoneNumber = "0945678901",
                            RoleId = 2,
                            UserName = "HoangVanE"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.XrfDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("XrfDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Note = "Initial XRF device",
                            SerialNumber = "XRF-001",
                            Status = "Active",
                            Type = 2
                        },
                        new
                        {
                            Id = 2,
                            Note = "Backup device",
                            SerialNumber = "XRF-002",
                            Status = "Active",
                            Type = 2
                        });
                });

            modelBuilder.Entity("BusiniessObject.Models.GammaDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GammaDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            SerialNumber = "GAM-001",
                            Status = "Active",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            SerialNumber = "GAM-002",
                            Status = "Active",
                            Type = 0
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.GammaCalibration", b =>
                {
                    b.HasOne("BusiniessObject.Models.GammaDevice", "GammaDevice")
                        .WithMany("Calibrations")
                        .HasForeignKey("GammaDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GammaDevice");
                });

            modelBuilder.Entity("BusinessObject.Models.Question", b =>
                {
                    b.HasOne("BusinessObject.Models.QuestionGroup", "Group")
                        .WithMany("Questions")
                        .HasForeignKey("GroupId")
                        .IsRequired()
                        .HasConstraintName("FK__question__group___398D8EEE");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("BusinessObject.Models.QuestionGroup", b =>
                {
                    b.Navigation("Questions");
                });

            modelBuilder.Entity("BusiniessObject.Models.GammaDevice", b =>
                {
                    b.Navigation("Calibrations");
                });
#pragma warning restore 612, 618
        }
    }
}
